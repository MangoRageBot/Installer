buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
    }
}

plugins {
    id 'org.gradlex.extra-java-module-info' version '1.12'
}


apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'org.mangorage'
version = getLatestGitTag() + "." + getLatestGitVersion()

println("Version: " + version)

extraJavaModuleInfo {
    setDeriveAutomaticModuleNamesFromFileNames(true)
}

def getLatestGitTag() {
    def result = "git describe --long --tags".execute().text.trim()
    if (result.empty) {
        throw new RuntimeException("Failed to retrieve commit count")
    } else {
        return result.split("-")[0]
    }
}


def getLatestGitVersion() {
    def result = "git describe --long --tags".execute().text.trim()
    if (result.empty) {
        throw new RuntimeException("Failed to retrieve commit count")
    } else {
        def commitCount = result.split("-")[1].toInteger()
        return commitCount
    }
}


repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'com.google.code.gson:gson:2.10.1'

    shadow 'net.sf.jopt-simple:jopt-simple:5.0.4'
    shadow 'com.google.code.gson:gson:2.10.1'
}

test {
    useJUnitPlatform()
}

shadowJar {
    group "main tasks"
    archiveClassifier.set('')
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'org.mangorage.installer.Installer'
    }
}

publishing {
    publications.register("installer", MavenPublication) {
        artifact shadowJar

        pom {
            name = 'MangoBot Installer'
            description = 'The Installer for my Discord Bot Project'
            url = 'https://github.com/MangoRageBot/Installer'
            issueManagement {
                system = 'github'
                url = 'https://github.com/MangoRageBot/Installer/issues'
            }
            developers {
                developer {
                    id = 'mangorage'
                    name = 'MangoRage'
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://maven.minecraftforge.net/"

            credentials {
                username = System.getenv("MAVEN_USER")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}